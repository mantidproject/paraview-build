diff --git a/Rendering/Matplotlib/vtkMatplotlibMathTextUtilities.cxx b/Rendering/Matplotlib/vtkMatplotlibMathTextUtilities.cxx
index ad03656..9dde545 100644
--- a/Rendering/Matplotlib/vtkMatplotlibMathTextUtilities.cxx
+++ b/Rendering/Matplotlib/vtkMatplotlibMathTextUtilities.cxx
@@ -75,6 +75,7 @@ vtkMatplotlibMathTextUtilities::CheckMPLAvailability()
   vtkMplStartUpDebugMacro("Initializing Python, if not already.");
   vtkPythonInterpreter::Initialize();
   vtkMplStartUpDebugMacro("Attempting to import matplotlib.");
+  vtkPythonScopeGilEnsurer gilEnsurer;
   if (PyErr_Occurred() || !PyImport_ImportModule("matplotlib") || PyErr_Occurred())
     {
     // FIXME: Check if we need this. Wouldn't pipe-ing the stdout/stderr make
@@ -144,6 +145,7 @@ vtkMatplotlibMathTextUtilities::~vtkMatplotlibMathTextUtilities()
 //----------------------------------------------------------------------------
 void vtkMatplotlibMathTextUtilities::CleanupPythonObjects()
 {
+  vtkPythonScopeGilEnsurer gilEnsurer;
   Py_XDECREF(this->MaskParser);
   Py_XDECREF(this->PathParser);
   Py_XDECREF(this->FontPropertiesClass);
@@ -158,7 +160,7 @@ bool vtkMatplotlibMathTextUtilities::InitializeMaskParser()
 {
   // ensure that Python is initialized.
   vtkPythonInterpreter::Initialize();
-
+  vtkPythonScopeGilEnsurer gilEnsurer;
   vtkSmartPyObject mplMathTextLib(PyImport_ImportModule("matplotlib.mathtext"));
   if (this->CheckForError(mplMathTextLib.GetPointer()))
     {
@@ -189,7 +191,7 @@ bool vtkMatplotlibMathTextUtilities::InitializePathParser()
 {
   // ensure that Python is initialized.
   vtkPythonInterpreter::Initialize();
-
+  vtkPythonScopeGilEnsurer gilEnsurer;
   vtkSmartPyObject mplTextPathLib(PyImport_ImportModule("matplotlib.textpath"));
   if (this->CheckForError(mplTextPathLib.GetPointer()))
     {
@@ -218,7 +220,7 @@ bool vtkMatplotlibMathTextUtilities::InitializeFontPropertiesClass()
 {
   // ensure that Python is initialized.
   vtkPythonInterpreter::Initialize();
-
+  vtkPythonScopeGilEnsurer gilEnsurer;
   vtkSmartPyObject mplFontManagerLib(
         PyImport_ImportModule("matplotlib.font_manager"));
   if (this->CheckForError(mplFontManagerLib.GetPointer()))
@@ -240,6 +242,7 @@ bool vtkMatplotlibMathTextUtilities::InitializeFontPropertiesClass()
 //----------------------------------------------------------------------------
 bool vtkMatplotlibMathTextUtilities::CheckForError()
 {
+  vtkPythonScopeGilEnsurer gilEnsurer;
   PyObject *exception = PyErr_Occurred();
   if (exception)
     {
@@ -350,6 +353,7 @@ vtkMatplotlibMathTextUtilities::GetFontProperties(vtkTextProperty *tprop)
 
   tpropFontSize = tprop->GetFontSize();
 
+  vtkPythonScopeGilEnsurer gilEnsurer;
   return PyObject_CallFunction(this->FontPropertiesClass,
                                const_cast<char*>("sssssi"), tpropFamily,
                                tpropStyle, tpropVariant, tpropStyle,
@@ -544,6 +548,7 @@ bool vtkMatplotlibMathTextUtilities::GetMetrics(
   long int rows = 0;
   long int cols = 0;
 
+  vtkPythonScopeGilEnsurer gilEnsurer;
   vtkSmartPyObject resultTuple(PyObject_CallMethod(this->MaskParser,
                                                    const_cast<char*>("to_mask"),
                                                    const_cast<char*>("sii"),
@@ -648,6 +653,7 @@ bool vtkMatplotlibMathTextUtilities::RenderString(const char *str,
   double bgA = tprop->GetBackgroundOpacity();
   bool hasBackground = (static_cast<unsigned char>(bgA * 255) != 0);
 
+  vtkPythonScopeGilEnsurer gilEnsurer;
   vtkSmartPyObject resultTuple(PyObject_CallMethod(this->MaskParser,
                                                    const_cast<char*>("to_mask"),
                                                    const_cast<char*>("sii"),
@@ -874,6 +880,7 @@ bool vtkMatplotlibMathTextUtilities::StringToPath(const char *str,
     return false;
     }
 
+  vtkPythonScopeGilEnsurer gilEnsurer;
   vtkSmartPyObject pyResultTuple(
         PyObject_CallMethod(this->PathParser,
                             const_cast<char*>("get_text_path"),
