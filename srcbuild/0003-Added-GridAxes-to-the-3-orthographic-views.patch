From fe40cbfe532fd6e419530bdc83f8d8eeae28967c Mon Sep 17 00:00:00 2001
From: Utkarsh Ayachit <utkarsh.ayachit@kitware.com>
Date: Sun, 19 Jul 2015 22:42:46 -0400
Subject: [PATCH 3/3] Added GridAxes to the 3 orthographic views.

Added vtkPVGridAxes3DActor to the 3 orthographic views. We simply create
the VTK objects on the server side and keep them synced with the main
vtkPVGridAxes3DActor instance managed in vtkPVRenderView.
---
 .../Rendering/vtkPVOrthographicSliceView.cxx       | 97 +++++++++++++++++++++-
 .../Rendering/vtkPVOrthographicSliceView.h         |  8 ++
 .../ClientServerCore/Rendering/vtkPVRenderView.cxx |  1 +
 .../ClientServerCore/Rendering/vtkPVRenderView.h   |  2 +-
 4 files changed, 106 insertions(+), 2 deletions(-)

diff --git a/ParaViewCore/ClientServerCore/Rendering/vtkPVOrthographicSliceView.cxx b/ParaViewCore/ClientServerCore/Rendering/vtkPVOrthographicSliceView.cxx
index b12fb10..207e5c9 100644
--- a/ParaViewCore/ClientServerCore/Rendering/vtkPVOrthographicSliceView.cxx
+++ b/ParaViewCore/ClientServerCore/Rendering/vtkPVOrthographicSliceView.cxx
@@ -21,6 +21,7 @@
 #include "vtkObjectFactory.h"
 #include "vtkPVCenterAxesActor.h"
 #include "vtkPVChangeOfBasisHelper.h"
+#include "vtkPVGridAxes3DActor.h"
 #include "vtkPVInteractorStyle.h"
 #include "vtkPVSynchronizedRenderer.h"
 #include "vtkPVSynchronizedRenderWindows.h"
@@ -166,7 +167,9 @@ vtkPVOrthographicSliceView::vtkPVOrthographicSliceView()
   SliceAnnotations(),
   SliceAnnotationsVisibility(false),
   MouseWheelForwardEventId(0),
-  MouseWheelBackwardEventId(0)
+  MouseWheelBackwardEventId(0),
+  GridAxes3DActorsNeedShallowCopy(false),
+  GridAxes3DActorObserverId(0)
 {
   this->CenterAxes->SetVisibility(0);
   this->SliceIncrements[0] = this->SliceIncrements[1] = this->SliceIncrements[2] = 1.0;
@@ -227,6 +230,10 @@ vtkPVOrthographicSliceView::vtkPVOrthographicSliceView()
 //----------------------------------------------------------------------------
 vtkPVOrthographicSliceView::~vtkPVOrthographicSliceView()
 {
+  if (this->GridAxes3DActor && this->GridAxes3DActorObserverId)
+    {
+    this->GridAxes3DActor->RemoveObserver(this->GridAxes3DActorObserverId);
+    }
 }
 
 //----------------------------------------------------------------------------
@@ -391,6 +398,16 @@ void vtkPVOrthographicSliceView::UpdateCenterAxes()
   this->SlicePositionAxes2D[1]->SetScale(widths);
   this->SlicePositionAxes2D[2]->SetScale(widths);
   this->SlicePositionAxes3D->SetScale(widths);
+
+  double bounds[6];
+  this->GeometryBounds.GetBounds(bounds);
+  for (int cc=0; cc < 3; cc++)
+    {
+    if (this->GridAxes3DActors[cc])
+      {
+      this->GridAxes3DActors[cc]->SetTransformedBounds(bounds);
+      }
+    }
 }
 
 //----------------------------------------------------------------------------
@@ -446,6 +463,30 @@ void vtkPVOrthographicSliceView::AboutToRenderOnLocalProcess(bool interactive)
     stream << axis_names[(cc+2)%3] << "=" << this->SlicePosition[(cc+2)%3];
     this->SliceAnnotations[cc]->SetText(stream.str().c_str());
     }
+
+  if (this->GridAxes3DActorsNeedShallowCopy)
+    {
+    // Update our clones of the GridAxes3DActor that sit in the 3 orthographic
+    // views.
+    this->GridAxes3DActorsNeedShallowCopy = false;
+    if (this->GridAxes3DActor)
+      {
+      for (int cc=0; cc < 3; cc++)
+        {
+        assert(this->GridAxes3DActors[cc]);
+        this->GridAxes3DActors[cc]->ShallowCopy(this->GridAxes3DActor);
+        this->GridAxes3DActors[cc]->SetEnableLayerSupport(false);
+        this->GridAxes3DActors[cc]->SetLabelMask(0xff);
+        }
+      this->GridAxes3DActors[YZ_PLANE]->SetFaceMask(
+        vtkGridAxes3DActor::MAX_YZ | vtkGridAxes3DActor::MIN_YZ);
+      this->GridAxes3DActors[ZX_PLANE]->SetFaceMask(
+        vtkGridAxes3DActor::MAX_ZX | vtkGridAxes3DActor::MIN_ZX);
+      this->GridAxes3DActors[XY_PLANE]->SetFaceMask(
+        vtkGridAxes3DActor::MAX_XY | vtkGridAxes3DActor::MIN_XY);
+      }
+    }
+
   this->Superclass::AboutToRenderOnLocalProcess(interactive);
 }
 
@@ -453,7 +494,13 @@ void vtkPVOrthographicSliceView::AboutToRenderOnLocalProcess(bool interactive)
 void vtkPVOrthographicSliceView::Update()
 {
   this->SlicePositionAxes3D->SetUseBounds(0);
+  // Since vtkGridAxes3DActor is potentially modified in Update (all of those
+  // modifications are passed on to our vtkGridAxes3DActor instances in
+  // UpdateCenterAxes(), hence we avoid forcing ShallowCopy on Render since that
+  // changes too many things.
+  bool prev = this->GridAxes3DActorsNeedShallowCopy;
   this->Superclass::Update();
+  this->GridAxes3DActorsNeedShallowCopy = prev;
   this->SlicePositionAxes3D->SetUseBounds(1);
 }
 
@@ -579,6 +626,54 @@ void vtkPVOrthographicSliceView::SetRotationFactor(double factor)
 }
 
 //----------------------------------------------------------------------------
+void vtkPVOrthographicSliceView::SetGridAxes3DActor(vtkPVGridAxes3DActor* gridActor)
+{
+  vtkSmartPointer<vtkPVGridAxes3DActor> prev = this->GridAxes3DActor;
+  this->Superclass::SetGridAxes3DActor(gridActor);
+  if (prev == this->GridAxes3DActor)
+    {
+    // nothing changed.
+    return;
+    }
+
+  if (prev && this->GridAxes3DActorObserverId)
+    {
+    prev->RemoveObserver(this->GridAxes3DActorObserverId);
+    }
+  if (this->GridAxes3DActor)
+    {
+    this->GridAxes3DActorObserverId =
+      this->GridAxes3DActor->AddObserver(vtkCommand::ModifiedEvent,
+        this, &vtkPVOrthographicSliceView::OnGridAxes3DActorModified);
+    this->GridAxes3DActorsNeedShallowCopy = true;
+    }
+
+  // we currently don't support grid axes in tile-display mode.
+  const bool in_tile_display_mode = this->InTileDisplayMode();
+  for (int cc=0; cc < 3; cc++)
+    {
+    if (this->GridAxes3DActors[cc])
+      {
+      this->Renderers[cc]->RemoveViewProp(this->GridAxes3DActors[cc]);
+      }
+    vtkPVGridAxes3DActor* clone = gridActor? gridActor->NewInstance() : NULL;
+    this->GridAxes3DActors[cc].TakeReference(clone);
+    if (this->GridAxes3DActors[cc] && !in_tile_display_mode)
+      {
+      this->GridAxes3DActors[cc]->ShallowCopy(gridActor);
+      this->GridAxes3DActors[cc]->SetEnableLayerSupport(false);
+      this->Renderers[cc]->AddViewProp(this->GridAxes3DActors[cc]);
+      }
+    }
+}
+
+//----------------------------------------------------------------------------
+void vtkPVOrthographicSliceView::OnGridAxes3DActorModified()
+{
+  this->GridAxes3DActorsNeedShallowCopy = true;
+}
+
+//----------------------------------------------------------------------------
 void vtkPVOrthographicSliceView::PrintSelf(ostream& os, vtkIndent indent)
 {
   this->Superclass::PrintSelf(os, indent);
diff --git a/ParaViewCore/ClientServerCore/Rendering/vtkPVOrthographicSliceView.h b/ParaViewCore/ClientServerCore/Rendering/vtkPVOrthographicSliceView.h
index f637b4b..2f8a949 100644
--- a/ParaViewCore/ClientServerCore/Rendering/vtkPVOrthographicSliceView.h
+++ b/ParaViewCore/ClientServerCore/Rendering/vtkPVOrthographicSliceView.h
@@ -109,6 +109,10 @@ protected:
   virtual void SetCenterOfRotation(double x, double y, double z);
   virtual void SetRotationFactor(double factor);
 
+  // Description:
+  // Set the vtkPVGridAxes3DActor to use for the view.
+  virtual void SetGridAxes3DActor(vtkPVGridAxes3DActor*);
+
   enum
     {
     SIDE_VIEW = 0,
@@ -131,6 +135,7 @@ protected:
   vtkNew<vtkPVCenterAxesActor> SlicePositionAxes2D[3];
   vtkNew<vtkPVCenterAxesActor> SlicePositionAxes3D;
   vtkNew<vtkTextRepresentation> SliceAnnotations[3];
+  vtkSmartPointer<vtkPVGridAxes3DActor> GridAxes3DActors[3];
 
   double SliceIncrements[3];
   double SlicePosition[3];
@@ -148,6 +153,9 @@ private:
 
   friend class vtkPVOrthographicSliceViewInteractorStyle;
 
+  bool GridAxes3DActorsNeedShallowCopy;
+  unsigned long GridAxes3DActorObserverId;
+  void OnGridAxes3DActorModified();
 //ETX
 };
 
diff --git a/ParaViewCore/ClientServerCore/Rendering/vtkPVRenderView.cxx b/ParaViewCore/ClientServerCore/Rendering/vtkPVRenderView.cxx
index f34ee82..efdded2 100644
--- a/ParaViewCore/ClientServerCore/Rendering/vtkPVRenderView.cxx
+++ b/ParaViewCore/ClientServerCore/Rendering/vtkPVRenderView.cxx
@@ -693,6 +693,7 @@ void vtkPVRenderView::SetGridAxes3DActor(vtkPVGridAxes3DActor* gridActor)
   if (this->GridAxes3DActor != gridActor)
     {
     vtkPVRendererCuller* culler = vtkPVRendererCuller::SafeDownCast(this->Culler.GetPointer());
+    // we currently don't support grid axes in tile-display mode.
     const bool in_tile_display_mode = this->InTileDisplayMode();
     if (this->GridAxes3DActor)
       {
diff --git a/ParaViewCore/ClientServerCore/Rendering/vtkPVRenderView.h b/ParaViewCore/ClientServerCore/Rendering/vtkPVRenderView.h
index 11dd360..f9a160d 100644
--- a/ParaViewCore/ClientServerCore/Rendering/vtkPVRenderView.h
+++ b/ParaViewCore/ClientServerCore/Rendering/vtkPVRenderView.h
@@ -439,7 +439,7 @@ public:
 
   // Description:
   // Set the vtkPVGridAxes3DActor to use for the view.
-  void SetGridAxes3DActor(vtkPVGridAxes3DActor*);
+  virtual void SetGridAxes3DActor(vtkPVGridAxes3DActor*);
 
   //*****************************************************************
   // Forwarded to orientation axes widget.
-- 
1.8.0.msysgit.0

